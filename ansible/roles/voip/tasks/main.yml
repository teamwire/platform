- name: Create data dirs
  ansible.builtin.file:
    path: "{{ item.path | default(item) }}"
    state: directory
    mode: 0755
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
  with_items:
    - "{{ voip_root_path }}/transcripts"
    - {
      path: "{{ voip_root_path }}/prosody/config/",
      owner: 101,
      group: 101
    }
    - {
      path: "{{ voip_root_path }}/prosody/prosody-plugins-custom",
      owner: 101,
      group: 101
    }
    - {
      path: "{{ voip_root_path }}/prosody/config/data/auth%2emeet%2ejitsi/accounts",
      owner: 101,
      group: 102
    }
    - {
      path: "{{ voip_root_path }}/jicofo",
      owner: 999,
      group: 1000
    }
    - {
      path: "{{ voip_root_path }}/jvb0",
      owner: 999,
      group: 1000
    }
    - "{{ voip_root_path }}/jigasi"
    - "{{ voip_root_path }}/jibri"
    - "{{ voip_root_path }}/turn/config"

  run_once: true

- name: Create JVB users for cluster environment.
  ansible.builtin.file:
    path: "{{ voip_root_path }}/jvb{{ item }}"
    state: directory
    mode: 0755
    owner: 999
    group: 1000
  with_sequence: start=0 end="{{ end_at }}"
  vars:
    end_at: "{{ groups['video_servers'] | count | int - 1 if groups['video_servers'] is defined else groups['backend_servers'] | count | int - 1 }}"
  when:
    - groups['all'] | length > 1
    - enable_jvb_cluster is defined
    - enable_jvb_cluster | lower  == "true"

- name: Template Turnserver configuration to destination
  ansible.builtin.template:
    src: "turn.j2"
    dest: "{{ voip_root_path }}/turn/config/turnserver.conf"
    owner: root
    group: root
    mode: 0644
  run_once: true
  when:
    - enable_stun is defined
    - enable_stun | string() == 'true'

- name: Register docker registry with harbor
  ansible.builtin.set_fact:
    local_registry: "{{ groups['docker_registry'] | sort | first }}:5000/"
  when:
    - config_done is defined
    - groups.docker_registry is defined

- name: VOIPHCL_5 Template voip nomad job file
  ansible.builtin.template:
    src: "voip.hcl.tmpl"
    dest: "{{ voip_root_path }}/voip.hcl"
    owner: root
    group: root
    mode: 0644
  run_once: true
  when:
    - groups['all'] | length > 1
    - voiphcl_5 | default(true)

- name: Checkvolume if single server
  ansible.builtin.include_tasks: turn_volume.yml
  when:
    - enable_voip is defined
    - enable_voip | string() == 'true'
    - enable_stun is defined
    - enable_stun | string() == 'true'
    - ssl_server_certificate is defined
    - ssl_keyfile is defined
    - groups['all'] | length == 1
