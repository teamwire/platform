---
- name: Create Jitsi Docker network
  community.docker.docker_network:
    name: voip
    ipam_config:
      - subnet: '172.18.0.0/24'

- name: Run the Teamwire voip web container
  community.docker.docker_container:
    name: teamwire_web
    image: "{{ 'harbor.teamwire.eu/' if use_teamwire_registry | default('true') | bool }}{{ voip_container_web }}:{{ voip_jitsi_version }}"
    state: started
    restart_policy: always
    networks:
      - name: voip
        ipv4_address: 172.18.0.2
    log_driver: "syslog"
    log_opt:
      tag: teamwire-web
      syslog-facility: "local6"
    ports:
      - 127.0.0.1:7080:7080
    etc_hosts: >
      {
        "xmpp.meet.jitsi": "172.18.0.3",
        "meet.jitsi": "172.18.0.3",
        "auth.meet.jitsi": "172.18.0.3",
        "muc.meet.jitsi": "172.18.0.3",
        "internal-muc.meet.jitsi": "172.18.0.3",
        "guest.meet.jitsi": "172.18.0.3",
        "recorder.meet.jitsi": "172.18.0.3"
      }
    env:
      ENABLE_XMPP_WEBSOCKET: "0"
      EXTERNAL_HOSTNAME: "{{ external_hostname | first if external_hostname | first | length() > 1 else external_hostname }}"
      TZ: "UTC"
      XMPP_AUTH_DOMAIN: "auth.meet.jitsi"
      XMPP_BOSH_URL_BASE: "http://{{ 'prosody.service.consul' if groups['all'] | length > 1 else '172.18.0.3' }}:5280"
      XMPP_DOMAIN: "meet.jitsi"
      XMPP_GUEST_DOMAIN: "guest.meet.jitsi"
      XMPP_MUC_DOMAIN: "muc.meet.jitsi"
      XMPP_RECORDER_DOMAIN: "recorder.meet.jitsi"
      ENABLE_AUTH: "1"
      ENABLE_GUESTS: "0"
      S6_BEHAVIOUR_IF_STAGE2_FAILS: "2"
      ENABLE_IPV6: "0"
  when: config_done is defined

- name: Run the Teamwire voip prosody container
  community.docker.docker_container:
    name: teamwire_prosody
    image: "{{ 'harbor.teamwire.eu/' if use_teamwire_registry | default('true') | bool }}{{ voip_container_prosody }}:{{ voip_jitsi_version }}"
    state: started
    restart_policy: always
    networks:
      - name: voip
        ipv4_address: 172.18.0.3
    volumes:
      - "{{ voip_root_path }}/prosody/config:/config:Z"
      - "{{ voip_root_path }}/prosody/prosody-plugins-custom:/prosody-plugins-custom:Z"
    etc_hosts: >
      {
        "xmpp.meet.jitsi": "172.18.0.3",
        "meet.jitsi": "172.18.0.3",
        "auth.meet.jitsi": "172.18.0.3",
        "muc.meet.jitsi": "172.18.0.3",
        "internal-muc.meet.jitsi": "172.18.0.3",
        "guest.meet.jitsi": "172.18.0.3",
        "recorder.meet.jitsi": "172.18.0.3"
      }
    log_driver: "syslog"
    log_opt:
      tag: teamwire-prosody
      syslog-facility: "local6"
    ports:
      - 127.0.0.1:5222:5222
      - 127.0.0.1:5280:5280
    env:
      EXTERNAL_HOSTNAME: "{{ external_hostname | first if external_hostname | first | length() > 1 else external_hostname }}"
      JVB_AUTH_PASSWORD: "{{ voip_jvb_password }}"
      JIBRI_XMPP_PASSWORD: "{{ voip_jibri_password }}"
      JICOFO_AUTH_PASSWORD: "{{ voip_jicofo_password }}"
      ENABLE_XMPP_WEBSOCKET: "0"
      XMPP_DOMAIN: "meet.jitsi"
      XMPP_AUTH_DOMAIN: "auth.meet.jitsi"
      XMPP_GUEST_DOMAIN: "guest.meet.jitsi"
      XMPP_MUC_DOMAIN: "muc.meet.jitsi"
      XMPP_INTERNAL_MUC_DOMAIN: "internal-muc.meet.jitsi"
      XMPP_MODULES: ""
      XMPP_MUC_MODULES: "tw_backend"
      XMPP_INTERNAL_MUC_MODULES: ""
      XMPP_RECORDER_DOMAIN: "recorder.meet.jitsi"
      ENABLE_AUTH: "1"
      ENABLE_GUESTS: "0"
      AUTH_TYPE: "jwt"
      JWT_TOKEN_AUTH_MODULE: "token_verification"
      JWT_APP_ID: "teamwire"
      JWT_APP_SECRET: "{{ jwt_app_secret }}"
      PROSODY_KEY: "{{ prosody_key }}"
      JWT_ALLOW_EMPTY: "0"
      JICOFO_AUTH_USER: "focus"
      JVB_AUTH_USER: "jvb0"
      JIBRI_XMPP_USER: "jibri"
      TZ: "UTC"
      S6_BEHAVIOUR_IF_STAGE2_FAILS: "2"
      ENABLE_END_CONFERENCE: "0"
      ENABLE_IPV6: "0"
      TURN_CREDENTIALS: "{{ stun_password if ( enable_stun is defined and enable_stun | string() == 'true' or enable_external_turn_server is defined and enable_external_turn_server | string() == 'true' ) |default() }}"
      TURNS_HOST: "{{ ( stun_hostname if enable_stun is defined and enable_stun | string() == 'true') or (external_turn_server if enable_external_turn_server is defined and enable_external_turn_server | string() == 'true') |default() }}"
      TURNS_PORT: "{{ (voip_turn_port if enable_stun is defined and enable_stun | string() == 'true') or (external_turn_port if enable_external_turn_server is defined and enable_external_turn_server | string() == 'true' ) |default() }}"
  when: config_done is defined

- name: Run the Teamwire voip jicofo container
  community.docker.docker_container:
    name: teamwire_jicofo
    image: "{{ 'harbor.teamwire.eu/' if use_teamwire_registry | default('true') | bool }}{{ voip_container_jicofo }}:{{ voip_jitsi_version }}"
    state: started
    restart_policy: always
    networks:
      - name: voip
        ipv4_address: 172.18.0.4
    etc_hosts: >
      {
        "xmpp.meet.jitsi": "172.18.0.3",
        "meet.jitsi": "172.18.0.3",
        "auth.meet.jitsi": "172.18.0.3",
        "muc.meet.jitsi": "172.18.0.3",
        "internal-muc.meet.jitsi": "172.18.0.3",
        "guest.meet.jitsi": "172.18.0.3",
        "recorder.meet.jitsi": "172.18.0.3"
      }
    volumes:
      - "{{ voip_root_path }}/jicofo:/config:Z"
    log_driver: "syslog"
    log_opt:
      tag: teamwire-jicofo
      syslog-facility: "local6"
    env:
      EXTERNAL_HOSTNAME: "{{ external_hostname | first if external_hostname | first | length() > 1 else external_hostname }}"
      JVB_AUTH_PASSWORD: "{{ voip_jvb_password }}"
      JICOFO_AUTH_PASSWORD: "{{ voip_jicofo_password }}"
      JICOFO_AUTH_USER: "focus"
      JIBRI_BREWERY_MUC: "jibribrewery"
      JIBRI_PENDING_TIMEOUT: "90"
      JIGASI_BREWERY_MUC: "jigasibrewery"
      JVB_BREWERY_MUC: "jvbbrewery"
      TZ: "UTC"
      XMPP_DOMAIN: "meet.jitsi"
      XMPP_AUTH_DOMAIN: "auth.meet.jitsi"
      XMPP_INTERNAL_MUC_DOMAIN: "internal-muc.meet.jitsi"
      XMPP_MUC_DOMAIN: "muc.meet.jitsi"
      XMPP_SERVER: "xmpp.meet.jitsi"
      ENABLE_AUTH: "1"
      AUTH_TYPE: "jwt"
      S6_BEHAVIOUR_IF_STAGE2_FAILS: "2"
  when: config_done is defined

- name: Run the Teamwire voip video bridge container
  community.docker.docker_container:
    name: teamwire_jvb
    image: "{{ 'harbor.teamwire.eu/' if use_teamwire_registry | default('true') | bool }}{{ voip_container_jvb }}:{{ voip_jitsi_version }}"
    state: started
    restart_policy: always
    log_driver: "syslog"
    networks:
      - name: voip
        ipv4_address: 172.18.0.5
    log_opt:
      tag: teamwire-jvb
      syslog-facility: "local6"
    ports:
      - 10000:10000/udp
      - 127.0.0.1:8085:8085
      - 127.0.0.1:9090:9090
      - "{{ ansible_default_ipv4.address }}:4443:4443"
    etc_hosts: >
      {
        "xmpp.meet.jitsi": "172.18.0.3",
        "meet.jitsi": "172.18.0.3",
        "auth.meet.jitsi": "172.18.0.3",
        "muc.meet.jitsi": "172.18.0.3",
        "internal-muc.meet.jitsi": "172.18.0.3",
        "guest.meet.jitsi": "172.18.0.3",
        "recorder.meet.jitsi": "172.18.0.3"
      }
    env: "{{ env_vars | combine(jvb_advertise_ips_env_var) if jvb_public_ip is defined else env_vars }}"
  vars:
    env_vars:
      EXTERNAL_HOSTNAME: "{{ external_hostname | first if external_hostname | first | length() > 1 else external_hostname }}"
      JVB_AUTH_PASSWORD: "{{ voip_jvb_password }}"
      XMPP_AUTH_DOMAIN: "auth.meet.jitsi"
      XMPP_INTERNAL_MUC_DOMAIN: "internal-muc.meet.jitsi"
      XMPP_SERVER: "xmpp.meet.jitsi"
      JVB_AUTH_USER: "jvb0"
      JVB_BREWERY_MUC: "jvbbrewery"
      JVB_PORT: "10000"
      JVB_TCP_HARVESTER_DISABLED: "false"
      JVB_TCP_PORT: "4443"
      JVB_TCP_MAPPED_PORT: "4443"
      JVB_STUN_SERVERS: "{{ stun_hostname + ':' + voip_turn_port if enable_stun is defined and enable_stun | string() == 'true' else external_turn_server | default('meet-jit-si-turnrelay.jitsi.net') + ':' + external_turn_port | default('443') }}"
      TZ: "UTC"
      S6_BEHAVIOUR_IF_STAGE2_FAILS: "2"
      ENABLE_COLIBRI_WEBSOCKET: "1"
      PUBLIC_URL: "https://{{ external_hostname | first if external_hostname | first | length() > 1 else external_hostname }}:8443"
      JVB_WS_SERVER_ID: "172.18.0.5"
    jvb_advertise_ips_env_var:
      JVB_ADVERTISE_IPS: "{{ jvb_public_ip }}"
  when: config_done is defined

- name: Run the Teamwire turn container
  community.docker.docker_container:
    name: teamwire_turn
    image: "{{ 'harbor.teamwire.eu/' if use_teamwire_registry | default('true') | bool }}{{ voip_container_turn }}:{{ voip_jitsi_version }}"
    state: started
    restart_policy: always
    network_mode: host
    volumes:
      - "{{ voip_root_path }}/turn/config:/etc/coturn:Z"
      - "turnvol:/data"
    log_driver: "syslog"
    log_opt:
      tag: teamwire-turn
      syslog-facility: "local6"
  when:
    - enable_stun is defined
    - enable_stun | string() == 'true'
    - config_done is defined
