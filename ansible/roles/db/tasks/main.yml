---
- name: Ensure mysql_root_password is configured before installing the Database
  ansible.builtin.fail:
    msg: "MySQL root password is not defined. Please check the configuration file"
  when:
    - config_done is defined
    - mysql_root_password is defined
    - mysql_root_password == None

- name: Check if installing a database cluster
  ansible.builtin.set_fact:
    galera_cluster: true
  when:
    - '"database_servers" in groups'
    - groups["database_servers"] | length > 1

- name: Install MariaDB
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  with_items:
    - mariadb-server
    - mariadb-client
    - python3-mysqldb
  register: mysql_initial_installation

- name: Create MariaDB binlog directory
  ansible.builtin.file:
    dest: /var/lib/mysql-binlog
    owner: mysql
    group: mysql
    mode: 0770
    state: directory
  when: '"database_servers" not in groups'

- name: Create MariaDB Log directory
  ansible.builtin.file:
    dest: /var/log/mysql
    owner: mysql
    group: adm
    mode: 0755
    state: directory
  notify: Flush MySQL Logs

# Install MariaDB server templates
# 50-server.cnf
# 60-teamwire.cnf
- name: Install MAriadb server templates
  ansible.builtin.include_tasks: server_templates.yml

- name: Set UTF8 as default character set
  ansible.builtin.copy:
    src: utf8.cnf
    dest: /etc/mysql/conf.d/utf8.cnf
    owner: root
    group: root
    mode: 0644
  notify: Restart MariaDB

- name: Set UTC as default time zone
  ansible.builtin.copy:
    src: timezone.cnf
    dest: /etc/mysql/conf.d/timezone.cnf
    owner: root
    group: root
    mode: 0644
  notify: Restart MariaDB

- name: Log slow queries
  ansible.builtin.copy:
    src: slow_query_log.cnf
    dest: /etc/mysql/conf.d/slow_query_log.cnf
    owner: root
    group: root
    mode: 0644
  notify: Restart MariaDB

- name: Disable unsecure functionality
  ansible.builtin.copy:
    src: security.cnf
    dest: /etc/mysql/conf.d/security.cnf
    owner: root
    group: root
    mode: 0644
  notify: Restart MariaDB

- name: Enable binary logs
  ansible.builtin.template:
    src: binlog.cnf.j2
    dest: /etc/mysql/conf.d/binlog.cnf
    owner: root
    group: root
    mode: 0644
  notify: Restart MariaDB
  when: '"database_servers" not in groups'

- name: Copy 50-client.cnf
  ansible.builtin.copy:
    src: 50-client.cnf
    dest: /etc/mysql/mariadb.conf.d/50-client.cnf
    owner: root
    group: root
    mode: 0644

- name: Start and enable MariaDB server
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: true

# Make sure MariaDB is restarted before the database is created, otherwise
# the configured defaults are not used.
- name: Flush handlers
  ansible.builtin.meta: flush_handlers

# ------------------------------------------------------------------------------
# MySQL root users
# ------------------------------------------------------------------------------
- name: Configure root for local ip on MariaDB interfaces
  community.mysql.mysql_user:
    name: root
    password: "{{ mysql_root_password }}"
    host: "{{ item }}"
    priv: "*.*:ALL"
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
  loop: "{{ groups['database_servers'] | map('extract', hostvars, 'private_ip') if groups['all'] | length > 1 else ['127.0.0.1'] }}"
  notify: mysql_root_user_update

# ------------------------------------------------------------------------------
# MySQL teamwire user/database
# ------------------------------------------------------------------------------
- name: Create Teamwire database(s)
  community.mysql.mysql_db:
    name: "{{ item.value.dbname }}"
    state: present
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true
  with_dict:
    - "{{ mysql_databases }}"
  when: galera_cluster is not defined or inventory_hostname == groups['database_servers'] | sort | first

- name: Create Teamwire database user(s)
  community.mysql.mysql_user:
    name: "{{ username }}"
    host: "{{ item.1 }}"
    password: "{{ password }}"
    priv: "{{ dbname }}.*:ALL/*.*:RELOAD"
    state: present
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true
  loop: "{{ mysql_databases | dict2items | subelements('value.hosts') }}"
  vars:
    username: "{{ item.0.value.username }}"
    password: "{{ item.0.value.password }}"
    dbname: "{{ item.0.value.dbname }}"
  when: config_done is defined

- name: Allow Teamwire database user from the management_host for maxscale connections
  community.mysql.mysql_user:
    name: "{{ username }}"
    host: "{{ hostvars[groups['management_servers'] | sort | first].private_ip }}"
    password: "{{ password }}"
    priv: "{{ dbname }}.*:ALL/*.*:RELOAD"
    state: present
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true
  loop: "{{ mysql_databases | dict2items | subelements('value.hosts') }}"
  vars:
    username: "{{ item.0.value.username }}"
    password: "{{ item.0.value.password }}"
    dbname: "{{ item.0.value.dbname }}"
  when:
    - config_done is defined
    - enable_tls_mysql is defined
    - enable_tls_mysql | lower == "true"
    - groups['all'] | length > 1
    - groups['management_servers'] | sort | first not in groups['backend_servers']

- name: Allow Teamwire database user to localhost for maxscale connections
  community.mysql.mysql_user:
    name: "{{ username }}"
    host: "localhost"
    password: "{{ password }}"
    priv: "{{ dbname }}.*:ALL/*.*:RELOAD"
    state: present
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true
  loop: "{{ mysql_databases | dict2items | subelements('value.hosts') }}"
  vars:
    username: "{{ item.0.value.username }}"
    password: "{{ item.0.value.password }}"
    dbname: "{{ item.0.value.dbname }}"
  when:
    - config_done is defined
    - enable_tls_mysql is defined
    - enable_tls_mysql | lower == "true"

  # Ensure MariaDB UTC timezone definition is present
- name: Count MariaDB UTC timezone definition
  community.mysql.mysql_query:
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_db: mysql
    query: SELECT COUNT(*) AS COUNT FROM time_zone_name WHERE name="UTC";
  register: mariadb_timezone_count

- name: Import MariaDB UTC timezone definition
  ansible.builtin.shell: "mysql_tzinfo_to_sql /usr/share/zoneinfo/UTC UTC | mysql --protocol socket --defaults-file=/etc/mysql/debian.cnf mysql"
  with_items: "{{ mariadb_timezone_count.query_result }}"
  when: item.COUNT == "0"

# Install database backup script
- name: Install database backup script
  ansible.builtin.include_tasks: backupscript.yml

- name: Include cluster
  ansible.builtin.include_tasks: cluster.yml
  when: galera_cluster is defined

# ------------------------------------------------------------------------------
# Ensure mysql history is empty and disabled
# ------------------------------------------------------------------------------
- name: Remove mysql history files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/home/teamwire/.mysql_history"
    - "/root/.mysql_history"

- name: Disable mysql history
  ansible.builtin.lineinfile:
    dest: /etc/environment
    line: "MYSQL_HISTFILE=/dev/null"

- name: Install logrotate job for mariadb logs
  ansible.builtin.copy:
    src: mariadb-log
    dest: /etc/logrotate.d/mariadb
    owner: root
    group: root
    mode: 0644
