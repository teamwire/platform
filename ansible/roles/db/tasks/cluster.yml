---
- name: Ensure xtrabackup_password is configured before installing the Database
  ansible.builtin.fail:
    msg: "Database replication user password is not defined. Please check the configuration file"
  when: xtrabackup_password is not defined or xtrabackup_password == None

- name: Remove Percona XtraBackup
  ansible.builtin.apt:
    name:
      - percona-xtrabackup-24
    state: absent

- name: Remove Percona repository
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/repo_percona_com_apt.list
    state: absent

- name: Install Galera and requirements
  ansible.builtin.apt:
    name:
      - galera-{{ '3' if ansible_distribution_release == 'buster' else '4' }}
      - libconfig-inifiles-perl
      - libterm-readkey-perl
      - mariadb-backup
      - socat

- name: Create database replication user
  community.mysql.mysql_user:
    host: localhost
    name: mariabackup
    password: "{{ xtrabackup_password }}"
    priv: "*.*:RELOAD,LOCK TABLES,REPLICATION CLIENT,PROCESS"
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when: inventory_hostname == groups['database_servers'] | sort | first

- name: Write Galera cluster configuration
  ansible.builtin.template:
    src: cluster.conf.j2
    dest: /etc/mysql/conf.d/cluster.cnf
    mode: 0644

- name: Create clustercheck database user
  community.mysql.mysql_user:
    name: clustercheck
    host: localhost
    password: "{{ clustercheck_password }}"
    priv: "*.*:PROCESS"
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when: inventory_hostname == groups['database_servers'] | sort | first

# Clustercheck script from https://github.com/olafz/percona-clustercheck
# Licensed under the BSD license
- name: Install Galera cluster check script
  ansible.builtin.copy:
    src: clustercheck
    dest: /usr/local/bin/clustercheck
    mode: 0755

- name: Copy systemd clustercheck socket configuration
  ansible.builtin.copy:
    src: clustercheck.socket
    dest: /etc/systemd/system/clustercheck.socket
    mode: 0640
  notify:
    - Reload systemd

- name: Write systemd clustercheck service
  ansible.builtin.template:
    src: clustercheck@.service.j2
    dest: /etc/systemd/system/clustercheck@.service
    mode: 0644
  notify:
    - Reload systemd

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Enable the clustercheck service
  ansible.builtin.service:
    name: clustercheck.socket
    state: started
    enabled: true

- name: Register Galera servers with Consul
  ansible.builtin.template:
    src: consul-galera.hcl.j2
    dest: /etc/consul.d/galera.hcl
    owner: root
    group: root
    mode: 0644
  notify: Restart consul

- name: Set password for mysql maxscale user
  community.mysql.mysql_user:
    name: maxscale
    password: "{{ mysql_maxscale_password }}"
    priv: "mysql.*:SELECT/*.*:SHOW DATABASES"
    host: "{{ item }}"
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
  with_items:
    - "{{ groups['backend_servers'] | map('extract', hostvars, 'private_ip') | list }}"
    - 127.0.0.1
  register: mysql_maxscale_user
  when:
    - mysql_maxscale_password is defined
    - inventory_hostname == groups['database_servers'] | sort | first
