---

- name: Include Tasks to disable HA-Proxy Galera configuration
  ansible.builtin.include_role:
    name: "{{ teamwire_platform_dir if teamwire_platform_dir is defined else (ansible_inventory_sources[0] | dirname) }}/roles/housekeeping"
    tasks_from: disable_galera_haproxy_configuration
  when: enable_tls_mysql is defined and enable_tls_mysql | lower == "true"

- name: Get gpg key for maxscale repository
  ansible.builtin.apt_key:
    id: "{{ maxscale_gpg_key_id }}"
    keyserver: keyserver.ubuntu.com
    keyring: /etc/apt/trusted.gpg.d/mariadb-maxscale.gpg
  environment:
    HTTP_PROXY: "{{ http_proxy | default() }}"
    HTTPS_PROXY: "{{ http_proxy | default() }}"

- name: Trigger handlers
  ansible.builtin.meta: flush_handlers

- name: Add maxscale repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64,arm64] https://dlm.mariadb.com/repo/maxscale/latest/apt {{ ansible_distribution_release }} main"
    state: present
    filename: mariadb-maxscale

- name: Install maxscale
  ansible.builtin.package:
    name: maxscale
    state: present

- name: Install logrotate job for Maxscale logs
  ansible.builtin.copy:
    src: maxscale-log
    dest: /etc/logrotate.d/maxscale_logrotate
    owner: root
    group: root
    mode: 0644

- name: Enable and start maxscale service
  ansible.builtin.service:
    name: maxscale
    enabled: true
    state: started
  when: enable_tls_mysql is defined and enable_tls_mysql | lower == "true"

- name: Check if maxscale secret file exists
  ansible.builtin.stat:
    path: /var/lib/maxscale/.secrets
  register: maxscale_secret_file

- name: Initialize maxscale encryption for passwords
  ansible.builtin.command: "maxkeys /var/lib/maxscale"
  when: maxscale_secret_file.stat.exists is falsy

# ------------------------------------------------------------------------------
# Ensure encrypted Password for maxscale users are up to date and created
# ------------------------------------------------------------------------------
- name: Ensure maxscale password hash fact is defined
  ansible.builtin.debug:
    msg: "Password hash fact for maxscale is not define. Triggered regeneration."
  when: ansible_local.maxscale.password_hash is not defined
  changed_when: ansible_local.maxscale.password_hash is not defined
  notify:
    - Generate Password Hash if not defined
    - Copy maxscale ansible facts
    - Ansible_facts_reload

- name: Ensure maxscale_monitor password hash fact is defined
  ansible.builtin.debug:
    msg: "Password hash fact for maxscale_monitor is not define. Triggered regeneration."
  when: ansible_local.maxscale.monitor_password_hash is not defined
  changed_when: ansible_local.maxscale.monitor_password_hash is not defined
  notify:
    - Generate Password Hash if not defined
    - Copy maxscale ansible facts
    - Ansible_facts_reload

- name: Check if maxscale user password needs an update
  ansible.builtin.command: "maxpasswd -d {{ ansible_local.maxscale.password_hash }}"
  register: decrpyted_maxscale_password
  changed_when: decrpyted_maxscale_password.stdout != mysql_maxscale_password
  when: ansible_local.maxscale.password_hash is defined
  no_log: true
  notify:
    - Generate Password Hash if not defined
    - Copy maxscale ansible facts
    - Ansible_facts_reload

- name: Check if maxscale_monitor user password needs an update
  ansible.builtin.command: "maxpasswd -d {{ ansible_local.maxscale.monitor_password_hash }}"
  register: decrpyted_maxscale_monitor_password
  changed_when: decrpyted_maxscale_monitor_password.stdout != mysql_maxscale_monitor_password
  when: ansible_local.maxscale.monitor_password_hash is defined
  no_log: true
  notify:
    - Generate Password Hash if not defined
    - Copy maxscale ansible facts
    - Ansible_facts_reload

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

# ------------------------------------------------------------------------------
# Configure maxscale
# ------------------------------------------------------------------------------
- name: Copy configuration file /etc/maxscale.cnf
  ansible.builtin.template:
    src: maxscale.cnf.j2
    dest: /etc/maxscale.cnf
    mode: 0644
  notify: Maxscale_restart
