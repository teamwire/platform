---
- name: Ensure rsyslog is installed
  ansible.builtin.apt:
    pkg: rsyslog

- name: Configure rsyslog for Docker containers
  block:
    - name: Configure rsyslog for Docker containers
      ansible.builtin.copy:
        src: 10-docker.conf
        dest: /etc/rsyslog.d/10-docker.conf
        owner: root
        group: root
        mode: 0644
      notify: Restart rsyslog
    - name: Prevent Docker logs in default syslog
      ansible.builtin.copy:
        src: 99-docker-no-syslog.conf
        dest: /etc/rsyslog.d/99-docker-no-syslog.conf
        owner: root
        group: root
        mode: 0644
      notify: Restart rsyslog

- name: Install logrotate job for cluster logs
  ansible.builtin.copy:
    src: container-log
    dest: /etc/logrotate.d/container-log
    owner: root
    group: root
    mode: 0644

# Install and configure docker
# Using `apt-key` to add third party signing keys is deprecated
# https://wiki.debian.org/DebianRepository/UseThirdParty
- name: Get Docker repository signing key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /usr/share/keyrings/docker-archive-keyring.key
    owner: root
    group: root
    mode: 0644
  environment:
    HTTP_PROXY: "{{ http_proxy | default() }}"
    HTTPS_PROXY: "{{ http_proxy | default() }}"
  register: docker_signing_key
  notify: Dearmor Docker repository key
  when: not ansible_local.offline_mode.stat.exists

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Add docker repository
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64 signed-by={{ (docker_signing_key.dest | splitext)[0] }}.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
    state: present
    update_cache: true
  when: not ansible_local.offline_mode.stat.exists

- name: Get checksum for docker version from repo.teamwire.eu
  ansible.builtin.get_url:
    url: "{{ docker_checksum_package_file_url }}"
    dest: "{{ docker_checksum_file_path }}"
    mode: 0444
  when: not ansible_local.offline_mode.stat.exists
  environment:
    https_proxy: "{{ http_proxy | default() }}"

- name: Get docker version from repo.teamwire.eu
  ansible.builtin.get_url:
    url: "{{ docker_package_file_url }}"
    dest: "{{ docker_package_file_path }}"
    mode: 0644
    checksum: "sha256: {{ lookup('file', docker_checksum_file_path) }}"
  when: not ansible_local.offline_mode.stat.exists
  environment:
    https_proxy: "{{ http_proxy | default() }}"

- name: Install docker packages
  ansible.builtin.apt:
    pkg: "{{ item }}"
    state: present
    force: true
  with_items: "{{ lookup('ansible.builtin.template', docker_package_file_path).splitlines() }}"

- name: Install python3-docker
  ansible.builtin.apt:
    pkg: python3-docker
    state: present

# BUG DOCKER !!! REMOVE THIS WHEN A FIX IS RELEASED!!!
# ISSUE 315 python-docker bug - Debian bug 910822
# https://github.com/docker/docker-credential-helpers/issues/105#issuecomment-584764909
- name: "CHECK IF BUG FILE EXISTS"
  ansible.builtin.stat:
    path: "/usr/bin/docker-credential-secretservice"
  register: bug_file

- name: "FIX BUG PLATFORM MR-315-python-docker"
  ansible.builtin.command: "mv /usr/bin/docker-credential-secretservice /usr/bin/docker-credential-secretservice.broken"
  when: bug_file.stat.exists is true

- name: Add user 'teamwire' to the docker group
  ansible.builtin.user:
    name: teamwire
    groups: docker
    append: true


- name: Create systemd drop-in directory for docker
  ansible.builtin.file:
    name: /etc/systemd/system/docker.service.d
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Configure Docker daemon parameters
  ansible.builtin.template:
    src: docker.conf.j2
    dest: /etc/systemd/system/docker.service.d/docker.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - Reload systemd
    - Restart docker

- name: Configure proxy for docker
  ansible.builtin.template:
    src: http-proxy.conf.j2
    dest: /etc/systemd/system/docker.service.d/http-proxy.conf
    owner: root
    group: root
    mode: 0644
  when: http_proxy is defined
  notify:
    - Reload systemd
    - Restart docker

- name: Disable proxy for docker when no proxy is configured
  ansible.builtin.file:
    name: /etc/systemd/system/docker.service.d/http-proxy.conf
    state: absent
  when: http_proxy is not defined
  notify:
    - Reload systemd
    - Restart docker

- name: Start Docker after mounting NFS shares
  ansible.builtin.copy:
    src: wait_for_nfs.conf
    dest: /etc/systemd/system/docker.service.d/wait_for_nfs.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - Reload systemd
    - Restart docker

# Make sure docker is restarted before the containers are set up, otherwise
# the restart would kill the running containers. We need to restart before the
# following step, otherwise the login would fail when a proxy is configured.
- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Install Docker Registry on configured host
  ansible.builtin.include_tasks: registry.yml
  when:
    - config_done is defined
    - "'docker_registry' in group_names"

- name: Flush handlers to ensure local registry is running and credentials are created
  ansible.builtin.meta: flush_handlers

- name: Log in on docker registry
  when:
    - config_done is defined
    - not "docker_registry" in groups
    - not ansible_local.offline_mode.stat.exists
  become: true
  become_user: teamwire
  community.docker.docker_login:
    registry_url: "{{ 'harbor.teamwire.eu' if use_teamwire_registry | default('true') | bool else 'https://index.docker.io/v1/' }}"
    username: "{{ dockerhub_username }}"
    password: "{{ dockerhub_password }}"

- name: Ensure successfull local docker registry login
  block:
# Necessary for the nomad docker authentication fallback
    - name: Log in on local docker registry - teamwire
      become: false
      community.docker.docker_login:
        registry_url: "{{ groups['docker_registry'] | first }}:5000/"
        username: "{{ local_registry_username }}"
        password: "{{ local_registry_password }}"

# Necessary for the voip image pushes within roles/voip/tasks/main.yml
    - name: Log in on local docker registry - root
      community.docker.docker_login:
        registry_url: "{{ groups['docker_registry'] | first }}:5000/"
        username: "{{ local_registry_username }}"
        password: "{{ local_registry_password }}"
  rescue:
    - name: Retrigger local registry credential creation
      ansible.builtin.debug:
        msg: "Retrigger credential creation for local docker registry"
      changed_when: true
      notify: Create local registry credentials
      delegate_to: "{{ groups['docker_registry'] | first }}"

    - name: Flush handlers to ensure local registry is running and credentials are created
      ansible.builtin.meta: flush_handlers

    - name: Force reauthorization on local docker registry - teamwire
      become: false
      community.docker.docker_login:
        registry_url: "{{ groups['docker_registry'] | first }}:5000/"
        username: "{{ local_registry_username }}"
        password: "{{ local_registry_password }}"
        reauthorize: true

    - name: Force reauthorization on local docker registry - root
      community.docker.docker_login:
        registry_url: "{{ groups['docker_registry'] | first }}:5000/"
        username: "{{ local_registry_username }}"
        password: "{{ local_registry_password }}"
        reauthorize: true
  when:
    - groups['all'] | length() > 1
    - groups.docker_registry is defined
    - not ansible_local.offline_mode.stat.exists

- name: Include cluster
  ansible.builtin.include_tasks: cluster.yml
  when: groups['all'] | length() > 1
