# Log to syslog
enable_syslog = true

# Increase log verbosity
log_level = "DEBUG"

# Setup data dir
data_dir = "/var/lib/nomad"

name = "{{ inventory_hostname }}"
bind_addr = "0.0.0.0"

# Don't call home
disable_update_check = true

advertise {
  # We need to specify our host's IP because we can't
  # advertise 0.0.0.0 to other nodes in our cluster.
  http = "{{ private_ip }}"
  rpc = "{{ private_ip }}"
  serf = "{{ private_ip }}"
}

consul {
  # Consul's HTTP Address
  address = "127.0.0.1:8500"
  auto_advertise = true
  server_service_name = "nomad"
  server_auto_join = true
  client_service_name = "nomad-client"
  client_auto_join = true
}

# Enable the server
server {
  enabled = {{ "true" if inventory_hostname in groups['hashi_servers'] else "false" }}
{% if inventory_hostname in groups['hashi_servers'] %}
  bootstrap_expect = {{ groups['hashi_servers'] | length }}
{% endif %}
}

# Enable the client
client {
  enabled = {{ "true" if "backend_servers" in group_names or "management_servers" in group_names or "voip_servers" in group_names or "video_servers" in group_names else "false" }}
  network_interface =  "{{ private_ip | addr_to_if(hostvars[inventory_hostname]) }}"
{% if ansible_host != private_ip %}
  host_network "public" {
        interface = "{{ ansible_host | addr_to_if(hostvars[inventory_hostname]) }}"
        }
{% endif %}

{% if 'backend_servers' in group_names and inventory_hostname in groups['backend_servers'] %}
  node_class = "backend_servers"
{% elif 'video_servers' in group_names and inventory_hostname in groups['video_servers'] %}
  node_class = "video_servers"
{% else %}
  node_class = "node_not_in_group_backend_servers"
{% endif %}
  meta = {
    "groups" = "{{ group_names | join(',') }}{{ ( ',' + tw_environments[inventory_hostname] | default() ) if tw_environments[inventory_hostname] is defined }}"
  }
}

# Docker plugin configuration
plugin "docker" {
  config {
    volumes {
      enabled = true
    }
  }
}
