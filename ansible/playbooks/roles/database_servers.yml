---
# This task will check if Vault has been initialized and read the secrets from there if so
- name: Vault Status check
  hosts: local:hashi_servers
  tasks:
    - name: Include vault role
      ansible.builtin.include_role:
        name: "{{ teamwire_platform_dir if teamwire_platform_dir is defined else (ansible_inventory_sources[0] | dirname) }}/roles/vault"
        tasks_from: secrets
      when:
        - ansible_local.vault is defined
        - ansible_local.vault.initialized == "true"
        - secrets_read is not defined

- name: Deploy and configure MySQL database
  hosts: database_servers
  serial: 1
  tasks:
    - name: Include db role
      ansible.builtin.include_role:
        name: "{{ teamwire_platform_dir if teamwire_platform_dir is defined else (ansible_inventory_sources[0] | dirname) }}/roles/db"
      when:
        - config_done is defined
        - mysql_host is not defined
        - groups['all'] | length() > 1

- name: Deploy and configure MySQL SSL Certificates
  hosts: database_servers:monitoring
  serial: 1
  tasks:
    - name: Include TLS DB Configuration
      ansible.builtin.include_role:
        name: "{{ teamwire_platform_dir if teamwire_platform_dir is defined else (ansible_inventory_sources[0] | dirname) }}/roles/db"
        tasks_from: tls-connect
      when:
        - enable_tls_mysql is defined
        - enable_tls_mysql | lower == "true"

- name: Configure maxscale connector between the backend_servers and the database_servers
  hosts: backend_servers
  tasks:
    - name: Configure maxscale
      ansible.builtin.include_role:
        name: "{{ teamwire_platform_dir if teamwire_platform_dir is defined else (ansible_inventory_sources[0] | dirname) }}/roles/db"
        tasks_from: maxscale
      when:
        - mysql_host is not defined
        - oracle_host is not defined
